// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }

        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'

        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'nu.studer.credentials' version '1.0.1'  // 用于在本地加密存储用户密码
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }

        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://s3.amazonaws.com/avocarrot-android-builds/dist" }
        maven {
            url "http://git.ihandysoft.com:8081/nexus/content/repositories/beta" // beta仓库
            credentials {
                username project.username // 使用之前配置的用户名
                password project.credentials."${project.username}" // 使用之前配置的密码
            }
        }
        maven {
            url "http://git.ihandysoft.com:8081/nexus/content/repositories/gm" // gm仓库
            credentials {
                username project.username
                password project.credentials."${project.username}"
            }
        }
        maven {
            url "http://git.ihandysoft.com:8081/nexus/content/repositories/thirdparty/"
            // thirdparty仓库
            credentials {
                username project.username
                password project.credentials."${project.username}"
            }
        }

        configurations.all {
            resolutionStrategy {
                cacheDynamicVersionsFor 0, 'seconds' // 确保gradle sync的时候总是会去拉取最新的积木版本。默认情况下gradle 每24小时才回去更新缓存
            }
        }

        flatDir {
            dirs '../libs'
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
